# ===================================================================
#  SQL資料庫連接設定 (DataSource Configuration)
# ===================================================================
# 指定 MySQL 8.x 的正確驅動程式類別名稱
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

# 資料庫的連接 URL
# 修正：在 URL 後方加上參數，可以避免時區錯誤和確保使用 UTF-8 編碼
spring.datasource.url=jdbc:mysql://localhost:3306/springbatch?serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8

# 登入資料庫的使用者名稱
spring.datasource.username=root

# 登入資料庫的密碼 (請務必換成自己設定的密碼！)
spring.datasource.password=1qaz@WSX3edc

# ===================================================================
#  NoSQL資料庫連接設定 (MongoDB Configuration)
# ===================================================================
# 這一行是用來設定【MongoDB】的連線，也完全正確。
# 注意：這裡的 springbatch 和上面的 springbatch 是兩個完全不同的資料庫！
# 一個在 MySQL 裡，一個在 MongoDB 裡。
# 為了避免混淆，在範例中將其改為 ecommerce
spring.data.mongodb.uri=mongodb://localhost:27017/ecommerce

# ===================================================================
#  Spring Batch 初始化設定
# ===================================================================
# 1. 保證執行初始化
#spring.datasource.initialization-mode=always
#spring.datasource.schema=classpath:org/springframework/batch/core/schema-mysql.sql

# 2. 自動化指令
# spring.batch.initialize-schema=always
spring.batch.jdbc.initialize-schema=always
spring.batch.jdbc.platform=mysql

# 3. 確保在應用程式啟動時，會自動執行定義的批次任務
spring.batch.job.enabled=true
#spring.batch.job.names=helloWorldJob


# ===================================================================
#  Spring Batch Job執行設定
# ===================================================================
#spring.batch.job.names=parentJob
spring.batch.job.names=migrationJob
